{"version":3,"file":"back-test.js","sourceRoot":"","sources":["back-test.ts"],"names":[],"mappings":";;AAAA,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,EAAE,CAAC,EAAE,GAAG,MAAM,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC;AACrD,oDAA4C;AAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAChC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACjD,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAClC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACtB,MAAM,cAAc,GAAG;IACnB,SAAS,EAAE,SAAS,CAAC,OAAO,EAAE;IAC9B,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;IAC1B,OAAO,EAAE;QACP,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,CAAC;QAClB,gBAAgB,EAAE,CAAC;QACnB,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE,IAAI;QACjB,UAAU,EAAE,IAAI;QAChB,QAAQ,EAAE;YACR,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE;YAC1D,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,YAAY,EAAE;SAC7D;KACF;CACJ,CAAC;AAEF,MAAM,MAAM,GAAG,IAAI,mBAAQ,CAAC,cAAc,CAAC,CAAC;AAE5C,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;IAC/C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAO,EAAC,EAAE;IAChB,MAAM,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC","sourcesContent":["process.on('unhandledRejection', up => { throw up });\nimport DBClient from \"../clients/db-client\";\nconst moment = require(\"moment\")\nconst testStart = moment(new Date(2017, 11, 18));\nconst testEnd = testStart.clone();\ntestEnd.add(100, \"d\");\nconst backTestParams = {\n    testStart: testStart.valueOf(),\n    testEnd: testEnd.valueOf(),\n    balance: {\n      makerCommission: 10,\n      takerCommission: 10,\n      buyerCommission: 0,\n      sellerCommission: 0,\n      canTrade: true,\n      canWithdraw: true,\n      canDeposit: true,\n      balances: [\n        { asset: 'ETH', free: '0.00000000', locked: '0.00000000' },\n        { asset: 'USD', free: '500.00000000', locked: '0.00000000' },\n      ]\n    }\n};\n\nconst client = new DBClient(backTestParams);\n\nconst runner = require(\"../core/runner\");\nrunner(client, backTestParams.testStart).then(() => {\n    console.log(\"should never happen\");\n}).catch((e:Error)=>{\n    throw e;\n});\n\n\n"]}